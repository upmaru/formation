# Bucket creation

## Setup Client

Setup the client. In this case we're using `Finch` as the `http_client`

```elixir
access_key_id = System.get_env("LB_AWS_ACCESS_KEY_ID")
secret_access_key = System.get_env("LB_AWS_SECRET_ACCESS_KEY")
region = "us-east-1"
```

```elixir
client = AWS.Client.create(access_key_id, secret_access_key, region)
client = %{client | http_client: {AWS.HTTPClient.Finch, [finch_name: AWS.Finch]}}
```

<!-- livebook:{"branch_parent_index":0} -->

## Create ACLs Disabled

```elixir
bucket_name = "example-abcd1234"

{:ok, nil, response} = AWS.S3.create_bucket(client, bucket_name, %{})
```

<!-- livebook:{"branch_parent_index":0} -->

## Create Bucket with ACLs

```elixir
bucket_name = "example-1234abcd"

{:ok, nil, response} =
  AWS.S3.create_bucket(client, bucket_name, %{
    "ACL" => "private",
    "ObjectOwnership" => "BucketOwnerPreferred"
  })
```

<!-- livebook:{"branch_parent_index":0} -->

## Create Public Bucket

```elixir
bucket_name = "example-public-1234abcd"

{:ok, nil, response} =
  AWS.S3.create_bucket(client, bucket_name, %{
    "ObjectOwnership" => "BucketOwnerPreferred"
  })

{:ok, nil, response} =
  AWS.S3.put_public_access_block(client, bucket_name, %{
    "PublicAccessBlockConfiguration" => %{
      "BlockPublicAcls" => false,
      "IgnorePublicAcls" => false,
      "BlockPublicPolicy" => true,
      "RestrictPublicBuckets" => true
    }
  })
```

<!-- livebook:{"offset":1412,"stamp":{"token":"QTEyOEdDTQ.Ta7x6jRcbmSQ-e90cnnMBnBcBnoCYGhZn0fs6eqAyNr6meb8y-pOP9yFz6w.Fz9RlWBY0rCiRLD8.79TgY8Q1jjI3PvU95ze1rTdNjmRkg7JWlzJx7sSye2wlk-Oa8KxM6VAgxB8dDmyBZmKUiW9Ln3LXJjceAJerH2AS2EQtavGgqdggB0J_jQ.HLvSWKh2Mh7lxWOJTa_ZaA","version":1}} -->
